<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>Data, Code &amp; Coffee</title>
    <link>https://hfshr.xyz/</link>
    <atom:link href="https://hfshr.xyz/blog.xml" rel="self" type="application/rss+xml"/>
    <description>Harry Fisher's blog
</description>
    <image>
      <title>Data, Code &amp; Coffee</title>
      <url>https://hfshr.xyz/favicon.ico</url>
      <link>https://hfshr.xyz/</link>
    </image>
    <generator>Distill</generator>
    <lastBuildDate>Sat, 19 Jun 2021 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Introducing {qbr}</title>
      <dc:creator>Harry Fisher</dc:creator>
      <link>https://hfshr.xyz/posts/2021-06-20-qbr</link>
      <description>


&lt;p&gt;I’ve been spending quite a bit of time in the world of shiny recently, and a particular problem I was facing meant I decided to dip my toe into the seemingly magical world of &lt;a href="https://www.htmlwidgets.org/"&gt;htmlwidgets&lt;/a&gt;. In brief, I needed a way for users to interactively construct complex queries that would be used to integrate a large database. While this is certainly possible to do using native shiny inputs, I &lt;del&gt;was being lazy&lt;/del&gt; wanted to see if I could leverage something that had already been created. After a bit of googling I came across &lt;a href="https://querybuilder.js.org/index.html"&gt;queryBuilder&lt;/a&gt;, a jquery plugin that provides UI component to create queries and filters. After playing around with the demos on the site, I was very impressed with the functionality and, and even better, someone had already made an R wrapper for the library! (See &lt;a href="https://github.com/harveyl888/queryBuilder"&gt;harveyl888/queryBuilder&lt;/a&gt; and &lt;a href="https://github.com/Yannael/queryBuildR"&gt;Yannael/queryBuildR&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;However this was where I started to run into some problems. The original queryBuilder has a vast array of settings that can be configured, including additional plugins and widgets that help add additional functionality to the builder. The existing R wrappers for queryBuilder only implemented a few of these settings, and I found myself wanting to access other settings which were not yet implemented. So I thought I’d have a go at creating my own version, taking inspiration from &lt;a href="https://github.com/harveyl888/queryBuilder"&gt;harveyl888/queryBuilder&lt;/a&gt; with the aim of including as much of the functionality as possible of the original queryBuilder.&lt;/p&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;p&gt;You can install &lt;code&gt;qbr&lt;/code&gt; from github:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;#install.packages(&amp;quot;remotes&amp;quot;)
remotes::install_github(&amp;quot;hfshr/qbr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and also check out the repository here: &lt;a href="https://github.com/hfshr/qbr"&gt;hfshr/qbr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is a quick example in shiny filtering the palmer penguins dataset with a few of the different settings configured. Code for the app is also below.&lt;/p&gt;
&lt;aside&gt;
&lt;a href="https://harryfish.shinyapps.io/qbr_demo/" class="uri"&gt;https://harryfish.shinyapps.io/qbr_demo/&lt;/a&gt;
&lt;/aside&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(shiny)
library(qbr)

ui &amp;lt;- fluidPage(
  # Application title
  titlePanel(&amp;quot;QueryBuilder demo&amp;quot;),
  mainPanel(
    fluidRow(
      column(
        8,
        queryBuilderOutput(&amp;quot;querybuilder&amp;quot;,
          width = 620,
          height = 300
        )
      ),
      column(
        4,
        uiOutput(&amp;quot;txtValidation&amp;quot;)
      )
    )
  ),
  fluidRow(
    column(
      width = 6,
      h3(&amp;quot;dplyr filter&amp;quot;),
      verbatimTextOutput(&amp;quot;txtFilterList&amp;quot;),
    ),
    column(
      width = 6,
      h3(&amp;quot;SQL filter&amp;quot;),
      verbatimTextOutput(&amp;quot;txtSQL&amp;quot;)
    )
  ),
  fluidRow(
    column(
      width = 12,
      h3(&amp;quot;dplyr filter applied to a table&amp;quot;),
      dataTableOutput(&amp;quot;txtFilterResult&amp;quot;)
    )
  )
)

# Define server logic required to draw a histogram
server &amp;lt;- function(input, output) {
  filters &amp;lt;- list(
    list(
      id = &amp;quot;species&amp;quot;,
      label = &amp;quot;Species&amp;quot;,
      type = &amp;quot;string&amp;quot;,
      input = &amp;quot;select&amp;quot;,
      description = &amp;quot;Shift-click to select multiple!&amp;quot;,
      values = list(&amp;quot;Adelie&amp;quot;, &amp;quot;Gentoo&amp;quot;, &amp;quot;Chinstrap&amp;quot;),
      multiple = TRUE,
      operators = c(&amp;quot;equal&amp;quot;, &amp;quot;not_equal&amp;quot;, &amp;quot;in&amp;quot;)
    ),
    list(
      id = &amp;quot;sex&amp;quot;,
      label = &amp;quot;Sex&amp;quot;,
      input = &amp;quot;checkbox&amp;quot;,
      values = list(
        &amp;quot;male&amp;quot;,
        &amp;quot;female&amp;quot;
      ),
      operators = c(&amp;quot;equal&amp;quot;, &amp;quot;not_equal&amp;quot;, &amp;quot;in&amp;quot;)
    ),
    list(
      id = &amp;quot;bill_length_mm&amp;quot;,
      label = &amp;quot;Bill length&amp;quot;,
      type = &amp;quot;integer&amp;quot;,
      validation = list(
        min = 0,
        max = 100
      ),
      plugin = &amp;quot;slider&amp;quot;,
      plugin_config = list(
        min = 0,
        max = 100,
        value = 0
      )
    )
  )

  output$txtValidation &amp;lt;- renderUI({
    if (isFALSE(input$querybuilder_validate) || is.null(input$querybuilder_validate)) {
      h3(&amp;quot;INVALID QUERY&amp;quot;, style = &amp;quot;color:red&amp;quot;)
    } else {
      h3(&amp;quot;VALID QUERY&amp;quot;, style = &amp;quot;color:green&amp;quot;)
    }
  })

  output$querybuilder &amp;lt;- renderQueryBuilder({
    queryBuilder(
      filters = filters,
      plugins = list(
        &amp;quot;sortable&amp;quot; = NA,
        &amp;quot;bt-tooltip-errors&amp;quot; = NA,
        &amp;quot;bt-checkbox&amp;quot; = list(&amp;quot;color&amp;quot; = &amp;quot;primary&amp;quot;),
        &amp;quot;filter-description&amp;quot; = list(&amp;quot;mode&amp;quot; = &amp;quot;bootbox&amp;quot;),
        &amp;quot;unique-filter&amp;quot; = NA
      ),
      display_errors = TRUE,
      allow_empty = FALSE,
      select_placeholder = &amp;quot;###&amp;quot;
    )
  })

  output$txtFilterList &amp;lt;- renderPrint({
    req(input$querybuilder_validate)
    filterTable(
      filters = input$querybuilder_out,
      data = palmerpenguins::penguins,
      output = &amp;quot;text&amp;quot;
    )
  })


  output$txtFilterResult &amp;lt;- renderDataTable(
    {
      req(input$querybuilder_validate)
      filterTable(
        filters = input$querybuilder_out,
        data = palmerpenguins::penguins,
        output = &amp;quot;table&amp;quot;
      )
    },
    options = list(
      pageLength = 5,
      scrollY = &amp;quot;200px&amp;quot;,
      scrollX = TRUE
    )
  )

  output$txtSQL &amp;lt;- renderPrint({
    req(input$querybuilder_validate)
    input$querybuilder_sql
  })
}

# Run the application
shinyApp(ui = ui, server = server)&lt;/code&gt;&lt;/pre&gt;
&lt;div class="l-screen-inset"&gt;
&lt;iframe src="https://harryfish.shinyapps.io/qbr_demo/" allowfullscreen scrolling="yes" width="100%" height="800px" frameboarder="0" data-external="1"&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;These settings barely scratch the surface of what is possible and the original queryBuilder site (&lt;a href="https://querybuilder.js.org/" class="uri"&gt;https://querybuilder.js.org/&lt;/a&gt;) is well worth a visit to see the full potential of the widget. Also a special thanks to &lt;a href="https://github.com/harveyl888/queryBuilder"&gt;harveyl888/queryBuilder&lt;/a&gt; on which &lt;code&gt;qbr&lt;/code&gt; is heavily based. If you find something that isn’t implemented feel free to open an issue &lt;a href="https://github.com/hfshr/qbr/issues"&gt;hfshr/qbr&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks for reading!&lt;/p&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>bbc186361a57913a4fd9c2460c3cc472</distill:md5>
      <guid>https://hfshr.xyz/posts/2021-06-20-qbr</guid>
      <pubDate>Sat, 19 Jun 2021 00:00:00 +0000</pubDate>
      <media:content url="https://hfshr.xyz/posts/2021-06-20-qbr/qbr.png" medium="image" type="image/png" width="862" height="331"/>
    </item>
    <item>
      <title>{dm} is fantastic!</title>
      <dc:creator>Harry Fisher</dc:creator>
      <link>https://hfshr.xyz/posts/2021-05-03-dm-is-fantastic</link>
      <description>A quick overview of the {dm} package for working with relational data      models in R.</description>
      <category>R</category>
      <category>SQL</category>
      <guid>https://hfshr.xyz/posts/2021-05-03-dm-is-fantastic</guid>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://hfshr.xyz/posts/2021-05-03-dm-is-fantastic/dm.png" medium="image" type="image/png" width="1356" height="761"/>
    </item>
    <item>
      <title>Zero to consciously incompetent with {Rcpp}</title>
      <dc:creator>Harry Fisher</dc:creator>
      <link>https://hfshr.xyz/posts/2021-04-04-learning-rcpp</link>
      <description>Exploring the world of {Rcpp} through the eyes of a complete novice.</description>
      <category>Rcpp</category>
      <guid>https://hfshr.xyz/posts/2021-04-04-learning-rcpp</guid>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
      <media:content url="https://hfshr.xyz/posts/2021-04-04-learning-rcpp/rcpp-logo-blue-dial.png" medium="image" type="image/png" width="400" height="413"/>
    </item>
    <item>
      <title>Many models, many plots, many pages!</title>
      <dc:creator>Harry Fisher</dc:creator>
      <link>https://hfshr.xyz/posts/2021-01-29-many-models-many-plots</link>
      <description>A quick post showing a cool {knitr} trick you can use when creating a pdf with many plots and many pages.</description>
      <guid>https://hfshr.xyz/posts/2021-01-29-many-models-many-plots</guid>
      <pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate>
      <media:content url="https://hfshr.xyz/posts/2021-01-29-many-models-many-plots/giphy.gif" medium="image" type="image/gif"/>
    </item>
    <item>
      <title>Musings on the RStudio instructor training process</title>
      <dc:creator>Harry Fisher</dc:creator>
      <link>https://hfshr.xyz/posts/2021-01-17-rstudio-certification</link>
      <description>A few thoughts and reflections on my recent experience completing the RStudio instructor training course.</description>
      <category>R</category>
      <category>Teaching</category>
      <guid>https://hfshr.xyz/posts/2021-01-17-rstudio-certification</guid>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      <media:content url="https://hfshr.xyz/posts/2021-01-17-rstudio-certification/blackboard.jpeg" medium="image" type="image/jpeg"/>
    </item>
  </channel>
</rss>
